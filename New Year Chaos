using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution {

    // Complete the minimumBribes function below.
    static void minimumBribes(int[] q) {
        var totalBribes = 0;
            int one = 1;
            int two = 2;
            int three = 3;
            for (int i = 0; i < q.Length - 1; i++)
            {
                //int bribes = q.Skip(i).Count(s => s < q[i]);
                if (q[i] == one)
                {
                    one = two;
                    two = three;
                    three++;
                }
                else if (q[i] == two)
                {
                    two = three;
                    three++;
                    totalBribes++;
                }
                else if (q[i] == three)
                {
                    three++;
                    totalBribes += 2; ;
                }

                else
                {
                    Console.WriteLine("Too chaotic");
                    return;
                }
            }
            Console.WriteLine(totalBribes);

    }

    static void Main(string[] args) {
        int t = Convert.ToInt32(Console.ReadLine());

        for (int tItr = 0; tItr < t; tItr++) {
            int n = Convert.ToInt32(Console.ReadLine());

            int[] q = Array.ConvertAll(Console.ReadLine().Split(' '), qTemp => Convert.ToInt32(qTemp))
            ;
            minimumBribes(q);
        }
    }
}
